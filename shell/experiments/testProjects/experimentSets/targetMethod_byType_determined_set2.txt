#------------------------------------------------------------------------
#Project=math  -  101_math
#------------------------------------------------------------------------
org.apache.commons.math.linear.SparseFieldVector#subtract([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldVector;
org.apache.commons.math.analysis.solvers.LaguerreSolver#solve([Lorg/apache/commons/math/complex/Complex;Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;
org.apache.commons.math.linear.OpenMapRealVector#getDistance(Lorg/apache/commons/math/linear/OpenMapRealVector;)D
org.apache.commons.math.dfp.DfpMath#expInternal(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.optimization.linear.SimplexSolver#doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair;
org.apache.commons.math.util.OpenIntToDoubleHashMap#containsKey(I)Z
#------------------------------------------------------------------------
#Project=colt  -  102_colt
#------------------------------------------------------------------------
cern.colt.matrix.DoubleFactory1D#sample(IDD)Lcern/colt/matrix/DoubleMatrix1D;
cern.colt.matrix.impl.Benchmark#benchmark(IILjava/lang/String;ZIDDD)V
cern.colt.matrix.linalg.Property#isUnitTriangular(Lcern/colt/matrix/DoubleMatrix2D;)Z
cern.colt.GenericSortingTest#testRandomly(I)V
cern.colt.matrix.ObjectMatrix3D#assign(Lcern/colt/matrix/ObjectMatrix3D;)Lcern/colt/matrix/ObjectMatrix3D;
hep.aida.bin.DynamicBin1D#equals(Ljava/lang/Object;)Z
cern.colt.matrix.DoubleMatrix2D#assign(Lcern/colt/matrix/DoubleMatrix2D;)Lcern/colt/matrix/DoubleMatrix2D;
hep.aida.bin.MightyStaticBin1D#sumOfPowers(I)D
cern.colt.matrix.linalg.QRDecomposition#solve(Lcern/colt/matrix/DoubleMatrix2D;)Lcern/colt/matrix/DoubleMatrix2D;
cern.colt.matrix.DoubleMatrix3D#assign(Lcern/colt/matrix/DoubleMatrix3D;)Lcern/colt/matrix/DoubleMatrix3D;
cern.colt.matrix.linalg.Property#isStrictlyTriangular(Lcern/colt/matrix/DoubleMatrix2D;)Z
hep.aida.bin.DynamicBin1D#sample(IZLcern/jet/random/engine/RandomEngine;Lcern/colt/buffer/DoubleBuffer;)V
cern.jet.random.sampling.WeightedRandomSampler#test(II)V
cern.colt.matrix.linalg.Algebra#inverse(Lcern/colt/matrix/DoubleMatrix2D;)Lcern/colt/matrix/DoubleMatrix2D;
hep.aida.bin.MightyStaticBin1D#moment(ID)D
cern.colt.matrix.ObjectMatrix1D#assign(Lcern/colt/matrix/ObjectMatrix1D;)Lcern/colt/matrix/ObjectMatrix1D;
hep.aida.bin.MightyStaticBin1D#compareWith(Lhep/aida/bin/AbstractBin1D;)Ljava/lang/String;
cern.colt.matrix.ObjectMatrix2D#assign(Lcern/colt/matrix/ObjectMatrix2D;)Lcern/colt/matrix/ObjectMatrix2D;
cern.colt.matrix.linalg.Property#isTriangular(Lcern/colt/matrix/DoubleMatrix2D;)Z
cern.jet.stat.quantile.DoubleBufferSet#forEach(Lcern/colt/function/DoubleProcedure;)Z
cern.jet.random.sampling.RandomSamplingAssistant#test(JJ)V
cern.colt.matrix.DoubleMatrix1D#assign(Lcern/colt/matrix/DoubleMatrix1D;)Lcern/colt/matrix/DoubleMatrix1D;
cern.colt.matrix.DoubleFactory2D#sample(Lcern/colt/matrix/DoubleMatrix2D;DD)Lcern/colt/matrix/DoubleMatrix2D;
cern.jet.random.sampling.RandomSamplingAssistant#sampleArray(I[I)[I
cern.colt.matrix.impl.TestMatrix2D#doubleTest34()V
#------------------------------------------------------------------------
#Project=jblas  -  103_jblas
#------------------------------------------------------------------------
org.jblas.FloatMatrix#equals(Ljava/lang/Object;)Z
org.jblas.DoubleMatrix#copy(Lorg/jblas/DoubleMatrix;)Lorg/jblas/DoubleMatrix;
org.jblas.DoubleMatrix#compare(Ljava/lang/Object;D)Z
org.jblas.ComplexFloatMatrix#andi(Lorg/jblas/ComplexFloat;Lorg/jblas/ComplexFloatMatrix;)Lorg/jblas/ComplexFloatMatrix;
org.jblas.FloatMatrix#argmax()I
org.jblas.ComplexDoubleMatrix#assertSameSize(Lorg/jblas/ComplexDoubleMatrix;)V
org.jblas.ComplexFloatMatrix#ori(Lorg/jblas/ComplexFloat;Lorg/jblas/ComplexFloatMatrix;)Lorg/jblas/ComplexFloatMatrix;
org.jblas.ComplexDoubleMatrix#equals(Ljava/lang/Object;)Z
org.jblas.ComplexDoubleMatrix#ori(Lorg/jblas/ComplexDouble;Lorg/jblas/ComplexDoubleMatrix;)Lorg/jblas/ComplexDoubleMatrix;
org.jblas.ComplexFloatMatrix#copy(Lorg/jblas/ComplexFloatMatrix;)Lorg/jblas/ComplexFloatMatrix;
org.jblas.DoubleMatrix#equals(Ljava/lang/Object;)Z
org.jblas.DoubleMatrix#max()D
org.jblas.ComplexDoubleMatrix#xori(Lorg/jblas/ComplexDouble;Lorg/jblas/ComplexDoubleMatrix;)Lorg/jblas/ComplexDoubleMatrix;
org.jblas.DoubleMatrix#min()D
org.jblas.ComplexFloatMatrix#assertSameSize(Lorg/jblas/ComplexFloatMatrix;)V
org.jblas.ComplexDoubleMatrix#copy(Lorg/jblas/ComplexDoubleMatrix;)Lorg/jblas/ComplexDoubleMatrix;
org.jblas.FloatMatrix#argmin()I
org.jblas.FloatMatrix#assertSameSize(Lorg/jblas/FloatMatrix;)V
org.jblas.FloatMatrix#max()F
org.jblas.ComplexFloatMatrix#xori(Lorg/jblas/ComplexFloat;Lorg/jblas/ComplexFloatMatrix;)Lorg/jblas/ComplexFloatMatrix;
org.jblas.DoubleMatrix#argmax()I
org.jblas.ComplexFloatMatrix#findIndices()[I
org.jblas.FloatMatrix#compare(Ljava/lang/Object;F)Z
org.jblas.DoubleMatrix#assertSameSize(Lorg/jblas/DoubleMatrix;)V
org.jblas.FloatMatrix#copy(Lorg/jblas/FloatMatrix;)Lorg/jblas/FloatMatrix;
org.jblas.FloatMatrix#min()F
org.jblas.ComplexFloatMatrix#equals(Ljava/lang/Object;)Z
org.jblas.ComplexDoubleMatrix#andi(Lorg/jblas/ComplexDouble;Lorg/jblas/ComplexDoubleMatrix;)Lorg/jblas/ComplexDoubleMatrix;
org.jblas.DoubleMatrix#argmin()I
org.jblas.ComplexDoubleMatrix#findIndices()[I
#------------------------------------------------------------------------
#Project=jscience  -  104_jscience
#------------------------------------------------------------------------
org.jscience.mathematics.number.FloatingPoint#hashCode()I
org.jscience.mathematics.number.LargeInteger#digitLength()I
org.jscience.mathematics.number.ModuloInteger#setModulus(Lorg/jscience/mathematics/number/LargeInteger;)V
org.jscience.mathematics.number.LargeInteger#compareTo(J)I
org.jscience.mathematics.number.LargeInteger#sqrt()Lorg/jscience/mathematics/number/LargeInteger;
org.jscience.mathematics.number.LargeInteger#mod(Lorg/jscience/mathematics/number/LargeInteger;)Lorg/jscience/mathematics/number/LargeInteger;
org.jscience.mathematics.number.Rational#normalize()Lorg/jscience/mathematics/number/Rational;
org.jscience.mathematics.number.LargeInteger#modPow(Lorg/jscience/mathematics/number/LargeInteger;Lorg/jscience/mathematics/number/LargeInteger;)Lorg/jscience/mathematics/number/LargeInteger;
org.jscience.mathematics.number.Rational#equals(Ljava/lang/Object;)Z
org.jscience.mathematics.number.Real#valueOf(Ljava/lang/CharSequence;)Lorg/jscience/mathematics/number/Real;
org.jscience.mathematics.number.LargeInteger#minus(Lorg/jscience/mathematics/number/LargeInteger;)Lorg/jscience/mathematics/number/LargeInteger;
org.jscience.mathematics.function.Polynomial#valueOf(Lorg/jscience/mathematics/structure/Ring;Lorg/jscience/mathematics/function/Term;)Lorg/jscience/mathematics/function/Polynomial;
org.jscience.mathematics.number.FloatingPoint#sqrt()Lorg/jscience/mathematics/number/FloatingPoint;
org.jscience.mathematics.number.LargeInteger#equals(Ljava/lang/Object;)Z
org.jscience.JScience#multiplyMatrices([[D)V
org.jscience.mathematics.number.LargeInteger#modInverse(Lorg/jscience/mathematics/number/LargeInteger;)Lorg/jscience/mathematics/number/LargeInteger;
org.jscience.mathematics.number.Real#toText()Ljavolution/text/Text;
org.jscience.economics.money.Currency#getDefaultFractionDigits()I
org.jscience.mathematics.number.Real#inverse()Lorg/jscience/mathematics/number/Real;
org.jscience.mathematics.number.Real#equals(Ljava/lang/Object;)Z
org.jscience.mathematics.number.LargeInteger#isOdd()Z
org.jscience.mathematics.number.LargeInteger#bitLength()I
#-------- Total: 83--------