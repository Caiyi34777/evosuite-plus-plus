#------------------------------------------------------------------------
#Project=math  -  101_math
#------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils#equals([F[F)Z
org.apache.commons.math.dfp.Dfp#equals(Ljava/lang/Object;)Z
org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic#equals(Ljava/lang/Object;)Z
org.apache.commons.math.transform.FastFourierTransformer#verifyDataSet([Ljava/lang/Object;)V
org.apache.commons.math.transform.FastFourierTransformer#verifyDataSet([D)V
org.apache.commons.math.linear.OpenMapRealVector#getLInfDistance(Lorg/apache/commons/math/linear/OpenMapRealVector;)D
org.apache.commons.math.stat.ranking.NaturalRanking#removeNaNs([Lorg/apache/commons/math/stat/ranking/NaturalRanking$IntDoublePair;)[Lorg/apache/commons/math/stat/ranking/NaturalRanking$IntDoublePair;
org.apache.commons.math.linear.EigenDecompositionImpl#<init>(Lorg/apache/commons/math/linear/RealMatrix;D)V
org.apache.commons.math.ode.events.CombinedEventsManager#reset(D[D)Z
org.apache.commons.math.dfp.Dfp#nextAfter(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.analysis.solvers.LaguerreSolver#solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D
org.apache.commons.math.util.MathUtils#equalsIncludingNaN([F[F)Z
org.apache.commons.math.util.ResizableDoubleArray#addElement(D)V
org.apache.commons.math.linear.OpenMapRealVector#add(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;
org.apache.commons.math.util.FastMathStrictComparisonTest#reportFailedResults(Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[I)V
org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode()V
org.apache.commons.math.util.MathUtils#equalsIncludingNaN(FFI)Z
org.apache.commons.math.linear.OpenMapRealVector#setEntry(ID)V
org.apache.commons.math.geometry.Vector3D#isInfinite()Z
org.apache.commons.math.util.OpenIntToDoubleHashMap#get(I)D
org.apache.commons.math.linear.OpenMapRealVector#getL1Distance(Lorg/apache/commons/math/linear/OpenMapRealVector;)D
org.apache.commons.math.geometry.Vector3D#equals(Ljava/lang/Object;)Z
org.apache.commons.math.dfp.DfpField#computeExp(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation()V
org.apache.commons.math.dfp.Dfp#divide(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction#<init>([D[Lorg/apache/commons/math/analysis/polynomials/PolynomialFunction;)V
org.apache.commons.math.linear.OpenMapRealMatrix#multiply(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;
org.apache.commons.math.linear.SparseFieldVector#add(Lorg/apache/commons/math/linear/SparseFieldVector;)Lorg/apache/commons/math/linear/FieldVector;
org.apache.commons.math.transform.FastHadamardTransformer#fht([I)[I
org.apache.commons.math.linear.OpenMapRealVector#subtract([D)Lorg/apache/commons/math/linear/OpenMapRealVector;
org.apache.commons.math.dfp.Dfp#sqrt()Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.Dfp#unequal(Lorg/apache/commons/math/dfp/Dfp;)Z
org.apache.commons.math.dfp.Dfp#add(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.ResizableDoubleArray#discardExtremeElements(IZ)V
org.apache.commons.math.optimization.linear.SimplexTableau#getBasicRow(I)Ljava/lang/Integer;
org.apache.commons.math.optimization.linear.SimplexSolver#getPivotRow(Lorg/apache/commons/math/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;
org.apache.commons.math.dfp.Dfp#toDouble()D
org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl#verifySequence(DDD)V
org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode()V
org.apache.commons.math.util.ResizableDoubleArray#discardExtremeElements(IZI)V
org.apache.commons.math.util.MathUtilsTest#testEquals()V
org.apache.commons.math.linear.OpenMapRealVector#subtract(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;
org.apache.commons.math.optimization.linear.SimplexSolver#solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V
org.apache.commons.math.linear.ArrayRealVector#hashCode()I
org.apache.commons.math.util.OpenIntToFieldHashMap#containsKey(I)Z
org.apache.commons.math.dfp.DfpMath#pow(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.Dfp#intValue()I
org.apache.commons.math.dfp.DfpMathTest#test(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;ILjava/lang/String;)V
org.apache.commons.math.dfp.DfpMath#atanInternal(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.transform.FastCosineTransformer#fct([D)[D
org.apache.commons.math.util.MathUtils#compareTo(DDD)I
org.apache.commons.math.dfp.DfpMath#sinInternal([Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.transform.FastHadamardTransformer#fht([D)[D
org.apache.commons.math.dfp.Dfp#lessThan(Lorg/apache/commons/math/dfp/Dfp;)Z
org.apache.commons.math.optimization.fitting.GaussianParametersGuesser#getInterpolationPointsForY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;
org.apache.commons.math.dfp.Dfp#multiply(I)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.DfpMath#acos(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.ResizableDoubleArray#addElementRolling(D)D
org.apache.commons.math.optimization.linear.SimplexTableau#equals(Ljava/lang/Object;)Z
org.apache.commons.math.dfp.Dfp#greaterThan(Lorg/apache/commons/math/dfp/Dfp;)Z
org.apache.commons.math.util.MathUtils#equalsIncludingNaN(DDD)Z
org.apache.commons.math.dfp.DfpMath#sin(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl#verifyBracketing(DDLorg/apache/commons/math/analysis/UnivariateRealFunction;)V
org.apache.commons.math.dfp.DfpDecTest#test(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;ILjava/lang/String;)V
org.apache.commons.math.dfp.DfpField#computePi(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.MathUtils#equalsIncludingNaN(DDI)Z
org.apache.commons.math.util.MathUtils#equals(DDD)Z
org.apache.commons.math.dfp.DfpMath#logInternal([Lorg/apache/commons/math/dfp/Dfp;)[Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.DfpMath#cosInternal([Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.ode.AbstractIntegrator#acceptStep(Lorg/apache/commons/math/ode/sampling/AbstractStepInterpolator;[D[DD)D
org.apache.commons.math.util.MathUtils#equalsIncludingNaN(DD)Z
org.apache.commons.math.util.OpenIntToDoubleHashMap#remove(I)D
org.apache.commons.math.ode.events.CombinedEventsManager#evaluateStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z
org.apache.commons.math.util.MathUtils#equals([D[D)Z
org.apache.commons.math.util.MathUtils#equalsIncludingNaN([D[D)Z
org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency()V
org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#equals(Ljava/lang/Object;)Z
org.apache.commons.math.dfp.DfpMath#atan(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.Dfp#divide(I)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.DfpDec#nextAfter(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.OpenIntToFieldHashMap#remove(I)Lorg/apache/commons/math/FieldElement;
org.apache.commons.math.linear.SparseFieldVector#subtract(Lorg/apache/commons/math/linear/SparseFieldVector;)Lorg/apache/commons/math/linear/SparseFieldVector;
org.apache.commons.math.dfp.DfpMath#log(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.DfpMath#cos(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaN()V
org.apache.commons.math.stat.descriptive.StatisticalSummaryValues#equals(Ljava/lang/Object;)Z
org.apache.commons.math.util.FastMathTest#cbrt(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.OpenIntToFieldHashMap#get(I)Lorg/apache/commons/math/FieldElement;
org.apache.commons.math.util.MathUtils#equals(FFF)Z
org.apache.commons.math.dfp.DfpMath#splitMult([Lorg/apache/commons/math/dfp/Dfp;[Lorg/apache/commons/math/dfp/Dfp;)[Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.dfp.DfpTest#test(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;ILjava/lang/String;)V
org.apache.commons.math.linear.BigMatrixImpl#solve(Lorg/apache/commons/math/linear/BigMatrix;)Lorg/apache/commons/math/linear/BigMatrix;
org.apache.commons.math.linear.ArrayRealVector#isInfinite()Z
org.apache.commons.math.stat.descriptive.SummaryStatistics#equals(Ljava/lang/Object;)Z
org.apache.commons.math.dfp.Dfp#multiply(Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.MathUtils#equalsIncludingNaN(FFF)Z
org.apache.commons.math.dfp.DfpField#computeLn(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;
org.apache.commons.math.util.MathUtils#equalsIncludingNaN(FF)Z
org.apache.commons.math.geometry.Vector3D#hashCode()I
org.apache.commons.math.linear.BigMatrixImpl#getDeterminant()Ljava/math/BigDecimal;
#------------------------------------------------------------------------
#Project=colt  -  102_colt
#------------------------------------------------------------------------
#------------------------------------------------------------------------
#Project=jblas  -  103_jblas
#------------------------------------------------------------------------
#------------------------------------------------------------------------
#Project=jscience  -  104_jscience
#------------------------------------------------------------------------
#-------- Total: 100--------